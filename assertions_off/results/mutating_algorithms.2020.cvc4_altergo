{"project": {"path": "mutating/mutating_algorithms.gpr", "files": ["copy_p.adb", "fill_agg_p.adb", "fill_p.adb", "random_p.adb", "random_shuffle_p.adb", "remove_copy_first_p.adb", "remove_copy_p.adb", "remove_copy_second_p.adb", "replace_copy_p.adb", "replace_p.adb", "reverse_copy_p.adb", "reverse_in_place_p.adb", "reverse_in_place_swap_p.adb", "rotate_copy_p.adb", "rotate_p.adb", "swap_array_p.adb", "swap_p.adb", "swap_ranges_index_p.adb", "swap_ranges_p.adb"]}, "version": "2020", "prover": ["cvc4", "altergo"]}
random_p.adb:1:14: warning: SPARK_Mode not applied to this compilation unit
random_p.adb:1:14: warning: only enclosed declarations with SPARK_Mode will be analyzed
fill_agg_p.adb:9:09: info: length check proved (CVC4: 3 VC in max 0.0 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
fill_agg_p.ads:11:15: info: precondition proved (CVC4: 3 VC in max 0.0 seconds and 1 step)
fill_agg_p.ads:11:15: info: postcondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
fill_agg_p.ads:11:54: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
fill_agg_p.ads:11:63: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
swap_p.ads:9:15: info: postcondition proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
fill_p.adb:13:13: info: precondition proved (CVC4: 6 VC in max 0.1 seconds and 1 step)
fill_p.adb:13:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
fill_p.adb:13:13: info: loop invariant preservation proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
fill_p.adb:13:52: info: range check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
fill_p.adb:13:72: info: range check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
fill_p.ads:11:15: info: precondition proved (CVC4: 3 VC in max 0.1 seconds and 1 step)
fill_p.ads:11:15: info: postcondition proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
fill_p.ads:11:54: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
fill_p.ads:11:63: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
copy_p.adb:12:37: info: overflow check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
copy_p.adb:12:37: info: range check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
copy_p.adb:12:42: info: overflow check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
copy_p.adb:14:16: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
copy_p.adb:16:36: info: range check proved (CVC4: 8 VC in max 0.0 seconds and 1 step)
copy_p.adb:16:36: info: loop invariant initialization proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
copy_p.adb:16:36: info: loop invariant preservation proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
copy_p.adb:16:55: info: range check proved (CVC4: 8 VC in max 0.0 seconds and 1 step)
copy_p.ads:12:15: info: postcondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
random_shuffle_p.adb:6:07: info: initialization of "J" proved
random_shuffle_p.adb:10:15: info: precondition proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
random_shuffle_p.adb:10:31: info: range check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
random_shuffle_p.adb:10:39: info: range check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
random_shuffle_p.adb:12:10: info: precondition proved (CVC4: 10 VC in max 0.1 seconds and 1 step)
random_shuffle_p.adb:12:25: info: range check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
random_shuffle_p.adb:13:33: info: precondition proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
random_shuffle_p.adb:13:33: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
random_shuffle_p.adb:13:33: info: loop invariant preservation proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
random_shuffle_p.ads:12:15: info: precondition proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
random_shuffle_p.ads:12:15: info: postcondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:8:20: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:8:30: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:8:41: info: division check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
reverse_in_place_p.adb:8:45: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:8:45: info: range check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:9:25: info: division check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
reverse_in_place_p.adb:11:07: info: initialization of "T1" proved
reverse_in_place_p.adb:18:26: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:19:40: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:19:40: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:20:21: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:20:21: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:20:39: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:20:39: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:21:20: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:21:20: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:23:10: info: loop variant proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:25:13: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:25:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:25:13: info: loop invariant preservation proved (CVC4: 1 VC in max 0.3 seconds and 1 step)
reverse_in_place_p.adb:26:14: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:28:13: info: precondition proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:28:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
reverse_in_place_p.adb:28:13: info: loop invariant preservation proved (CVC4: 1 VC in max 3.3 seconds and 1376 steps)
reverse_in_place_p.adb:30:13: info: precondition proved (CVC4: 4 VC in max 0.2 seconds and 1 step)
reverse_in_place_p.adb:30:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.adb:30:13: info: loop invariant preservation proved (CVC4: 1 VC in max 1.0 seconds and 47 steps)
reverse_in_place_p.ads:9:14: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_p.ads:9:14: info: postcondition proved (CVC4: 1 VC in max 0.3 seconds and 1 step)
reverse_in_place_swap_p.adb:8:20: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:8:30: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:8:41: info: division check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
reverse_in_place_swap_p.adb:8:45: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:8:45: info: range check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:9:25: info: division check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
reverse_in_place_swap_p.adb:17:26: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:20:16: medium: formal parameters "P" and "Q" might be aliased (SPARK RM 6.4.2)
reverse_in_place_swap_p.adb:20:27: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:20:27: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:20:43: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:20:43: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:22:10: info: loop variant proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:24:13: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:24:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:24:13: info: loop invariant preservation proved (CVC4: 1 VC in max 0.3 seconds and 1 step)
reverse_in_place_swap_p.adb:25:14: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:27:13: info: precondition proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:27:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
reverse_in_place_swap_p.adb:27:13: info: loop invariant preservation proved (CVC4: 1 VC in max 2.6 seconds and 1342 steps)
reverse_in_place_swap_p.adb:29:13: info: precondition proved (CVC4: 4 VC in max 0.2 seconds and 1 step)
reverse_in_place_swap_p.adb:29:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.adb:29:13: info: loop invariant preservation proved (CVC4: 1 VC in max 0.9 seconds and 37 steps)
reverse_in_place_swap_p.ads:10:15: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_in_place_swap_p.ads:10:15: info: postcondition proved (CVC4: 1 VC in max 0.3 seconds and 1 step)
swap_ranges_p.adb:10:22: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
swap_ranges_p.adb:11:27: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:11:27: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:11:27: info: index check proved (CVC4: 4 VC in max 0.0 seconds and 1 step)
swap_ranges_p.adb:11:44: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:11:44: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:11:44: info: index check proved (CVC4: 4 VC in max 0.0 seconds and 1 step)
swap_ranges_p.adb:14:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:14:13: info: loop invariant preservation proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
swap_ranges_p.adb:14:14: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:15:13: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:17:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:17:13: info: loop invariant preservation proved (CVC4: 1 VC in max 1.4 seconds and 753 steps)
swap_ranges_p.adb:17:14: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:18:13: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:20:13: info: loop invariant preservation proved (CVC4: 1 VC in max 0.2 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_ranges_p.adb:20:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_ranges_p.adb:21:16: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:22:15: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:24:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_ranges_p.adb:24:13: info: loop invariant preservation proved (CVC4: 1 VC in max 0.2 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_ranges_p.adb:25:16: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_p.adb:26:15: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_p.ads:11:15: info: postcondition proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_copy_p.adb:11:29: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_copy_p.adb:11:29: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
reverse_copy_p.adb:11:34: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_copy_p.adb:14:13: info: precondition proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
reverse_copy_p.adb:14:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
reverse_copy_p.adb:14:13: info: loop invariant preservation proved (altergo: 1 VC in max 0.9 seconds and 4876 steps)
reverse_copy_p.adb:15:16: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
reverse_copy_p.adb:15:34: info: range check proved (CVC4: 8 VC in max 0.0 seconds and 1 step)
reverse_copy_p.ads:12:15: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
reverse_copy_p.ads:12:15: info: postcondition proved (altergo: 1 VC in max 0.3 seconds and 1293 steps)
rotate_copy_p.adb:11:07: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
rotate_copy_p.adb:11:13: info: range check proved (CVC4: 4 VC in max 0.0 seconds and 1 step)
rotate_copy_p.adb:11:24: info: overflow check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
rotate_copy_p.adb:11:40: info: range check proved (CVC4: 4 VC in max 0.0 seconds and 1 step)
rotate_copy_p.adb:11:61: info: overflow check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
rotate_copy_p.adb:12:07: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
rotate_copy_p.adb:12:13: info: range check proved (CVC4: 4 VC in max 0.0 seconds and 1 step)
rotate_copy_p.adb:12:35: info: overflow check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
rotate_copy_p.adb:12:47: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
rotate_copy_p.adb:12:57: info: overflow check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
rotate_copy_p.ads:12:49: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
rotate_copy_p.ads:13:15: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
rotate_copy_p.ads:13:15: info: postcondition proved (altergo: 2 VC in max 0.8 seconds and 3633 steps)
rotate_copy_p.ads:13:50: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
rotate_copy_p.ads:14:16: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
rotate_copy_p.ads:14:44: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
replace_copy_p.adb:13:21: info: overflow check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
replace_copy_p.adb:13:21: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
replace_copy_p.adb:13:26: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
replace_copy_p.adb:16:13: info: precondition proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
replace_copy_p.adb:16:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
replace_copy_p.adb:16:13: info: loop invariant preservation proved (altergo: 1 VC in max 3.3 seconds and 14828 steps)
replace_copy_p.adb:17:16: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
replace_copy_p.adb:17:34: info: range check proved (CVC4: 8 VC in max 0.0 seconds and 1 step)
replace_copy_p.ads:14:15: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
replace_copy_p.ads:14:15: info: postcondition proved (altergo: 1 VC in max 0.6 seconds and 2805 steps)
swap_array_p.adb:10:07: info: range check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.adb:10:35: info: length check proved (CVC4: 2 VC in max 0.0 seconds and 1 step; Trivial: 2 VC in max 0.0 seconds and 0 steps)
swap_array_p.adb:11:38: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.adb:15:07: info: initialization of "A_After_First" proved
swap_array_p.adb:15:07: info: range check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.adb:23:19: info: precondition proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:23:46: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.adb:24:19: info: precondition proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:24:53: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:25:18: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:25:18: info: postcondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:29:13: info: precondition proved (CVC4: 6 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:29:56: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:30:13: info: precondition proved (CVC4: 6 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:30:51: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:32:16: info: loop invariant preservation proved (altergo: 1 VC in max 2.9 seconds and 10274 steps)
swap_array_p.adb:32:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
swap_array_p.adb:37:10: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.adb:37:27: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.adb:38:21: info: length check proved (CVC4: 3 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_array_p.adb:38:24: info: length check proved (CVC4: 2 VC in max 0.0 seconds and 1 step; Trivial: 2 VC in max 0.0 seconds and 0 steps)
swap_array_p.adb:42:10: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.adb:45:07: info: precondition proved (CVC4: 6 VC in max 0.1 seconds and 1 step)
swap_array_p.ads:15:15: info: postcondition proved (CVC4: 4 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_array_p.ads:15:22: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.ads:15:30: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.ads:15:49: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.ads:15:57: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.ads:18:49: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.ads:18:57: info: index check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_array_p.ads:19:16: info: precondition proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
rotate_p.adb:10:25: info: range check proved (CVC4: 4 VC in max 0.0 seconds and 1 step)
rotate_p.adb:10:47: info: overflow check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
rotate_p.adb:11:25: info: range check proved (CVC4: 4 VC in max 0.0 seconds and 1 step)
rotate_p.adb:11:36: info: overflow check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
rotate_p.ads:11:20: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
rotate_p.ads:12:15: info: postcondition proved (altergo: 2 VC in max 3.6 seconds and 15193 steps)
rotate_p.ads:12:16: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
rotate_p.ads:13:07: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
rotate_p.ads:14:17: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
rotate_p.ads:14:48: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
replace_p.adb:16:13: info: precondition proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
replace_p.adb:16:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
replace_p.adb:16:13: info: loop invariant preservation proved (altergo: 1 VC in max 4.9 seconds and 27203 steps)
replace_p.adb:17:17: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
replace_p.adb:17:45: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
replace_p.adb:19:13: info: loop invariant preservation proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
replace_p.adb:19:13: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
replace_p.adb:20:16: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
replace_p.adb:20:48: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
replace_p.ads:11:15: info: precondition proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
replace_p.ads:11:15: info: postcondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:12:37: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:12:37: info: range check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:12:42: info: overflow check proved (CVC4: 2 VC in max 0.0 seconds and 1 step)
swap_ranges_index_p.adb:14:29: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:14:29: info: index check proved (CVC4: 4 VC in max 0.0 seconds and 1 step)
swap_ranges_index_p.adb:17:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:17:16: info: loop invariant preservation proved (altergo: 1 VC in max 0.7 seconds and 4165 steps)
swap_ranges_index_p.adb:17:17: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:17:46: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:19:16: info: loop invariant preservation proved (altergo: 1 VC in max 1.8 seconds and 6608 steps)
swap_ranges_index_p.adb:19:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:19:17: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:20:16: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:22:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_ranges_index_p.adb:22:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.3 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_ranges_index_p.adb:23:19: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:23:51: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:25:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_ranges_index_p.adb:25:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
swap_ranges_index_p.adb:26:19: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.adb:26:51: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
swap_ranges_index_p.ads:11:15: info: postcondition proved (CVC4: 2 VC in max 0.2 seconds and 1 step)
remove_copy_first_p.adb:10:30: info: overflow check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_first_p.adb:14:16: info: range check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:18:19: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:19:27: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:23:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:23:16: info: loop invariant preservation proved (altergo: 1 VC in max 1.1 seconds and 7623 steps)
remove_copy_first_p.adb:23:30: info: precondition proved (CVC4: 2 VC in max 0.2 seconds and 1 step)
remove_copy_first_p.adb:23:44: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:25:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_first_p.adb:25:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.4 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_first_p.adb:25:69: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:27:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.3 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_first_p.adb:28:18: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Multiset_Retain_Rest (A (A'First .. J), B (B'First .. K - 1), Val)
remove_copy_first_p.adb:29:21: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:29:39: info: range check proved (CVC4: 8 VC in max 0.2 seconds and 1 step)
remove_copy_first_p.adb:31:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:31:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
remove_copy_first_p.adb:31:52: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:33:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
remove_copy_first_p.adb:33:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:33:47: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.adb:33:66: info: index check proved (CVC4: 4 VC in max 0.2 seconds and 1 step)
remove_copy_first_p.adb:36:17: info: range check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.ads:17:07: info: disjoint contract cases proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_first_p.ads:17:07: info: complete contract cases proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.ads:17:39: info: contract case proved (CVC4: 2 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_first_p.ads:18:21: info: contract case proved (CVC4: 6 VC in max 6.6 seconds and 2551 steps; Trivial: 2 VC in max 0.0 seconds and 0 steps)
remove_copy_first_p.ads:20:34: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.ads:21:53: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.ads:22:56: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.ads:22:68: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_first_p.ads:25:39: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:11:35: info: overflow check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_p.adb:17:16: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_p.adb:21:23: info: length check proved (CVC4: 6 VC in max 0.1 seconds and 1 step; Trivial: 2 VC in max 0.0 seconds and 0 steps)
remove_copy_p.adb:22:19: info: index check proved (CVC4: 4 VC in max 0.2 seconds and 1 step)
remove_copy_p.adb:24:19: info: precondition proved (CVC4: 6 VC in max 0.3 seconds and 1 step)
remove_copy_p.adb:25:22: info: range check proved (CVC4: 8 VC in max 0.0 seconds and 1 step)
remove_copy_p.adb:25:38: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:25:44: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:26:22: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:28:23: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:29:16: info: precondition proved (CVC4: 9 VC in max 3.5 seconds and 848 steps; altergo: 1 VC in max 0.7 seconds and 4470 steps)
remove_copy_p.adb:30:19: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:30:37: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:34:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_p.adb:34:16: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; altergo: 1 VC in max 0.1 seconds and 363 steps)
remove_copy_p.adb:34:69: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:36:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.6 seconds and 1 step)
remove_copy_p.adb:36:16: info: loop invariant preservation proved (altergo: 1 VC in max 2.5 seconds and 15235 steps)
remove_copy_p.adb:36:30: info: precondition proved (CVC4: 2 VC in max 0.2 seconds and 1 step)
remove_copy_p.adb:36:44: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:38:16: info: loop invariant preservation proved (CVC4: 1 VC in max 7.4 seconds and 1717 steps; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_p.adb:38:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_p.adb:40:21: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:40:39: info: range check proved (CVC4: 8 VC in max 0.3 seconds and 1 step)
remove_copy_p.adb:42:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:42:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.3 seconds and 1 step)
remove_copy_p.adb:42:52: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:44:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:44:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
remove_copy_p.adb:44:47: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_p.adb:44:66: info: index check proved (CVC4: 4 VC in max 0.2 seconds and 1 step)
remove_copy_p.adb:47:17: info: range check proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
remove_copy_p.ads:19:21: info: contract case proved (CVC4: 6 VC in max 15.6 seconds and 6079 steps; Trivial: 2 VC in max 0.0 seconds and 0 steps)
remove_copy_p.ads:21:34: info: precondition proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_p.ads:22:53: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_p.ads:23:56: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_p.ads:23:68: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_p.ads:26:39: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_p.ads:27:15: info: contract case proved (CVC4: 2 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_second_p.adb:10:30: info: overflow check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_second_p.adb:14:16: info: range check proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_second_p.adb:23:19: info: index check proved (CVC4: 4 VC in max 0.2 seconds and 1 step)
remove_copy_second_p.adb:29:23: info: overflow check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:30:16: medium: precondition might fail, cannot prove Multiset_Retain_Rest (Remove_Last (A), Remove_Last (B), Val)
remove_copy_second_p.adb:31:19: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:31:37: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:35:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_second_p.adb:35:16: info: loop invariant preservation proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; altergo: 1 VC in max 0.1 seconds and 229 steps)
remove_copy_second_p.adb:35:69: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:37:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
remove_copy_second_p.adb:37:16: info: loop invariant preservation proved (altergo: 1 VC in max 1.5 seconds and 9631 steps)
remove_copy_second_p.adb:37:30: info: precondition proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:37:44: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:39:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_second_p.adb:39:16: info: loop invariant preservation proved (CVC4: 1 VC in max 3.4 seconds and 567 steps; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_second_p.adb:41:21: info: range check proved (CVC4: 8 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:41:39: info: range check proved (CVC4: 8 VC in max 0.2 seconds and 1 step)
remove_copy_second_p.adb:43:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
remove_copy_second_p.adb:43:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_second_p.adb:43:52: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:45:16: info: loop invariant initialization proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:45:16: info: loop invariant preservation proved (CVC4: 1 VC in max 0.2 seconds and 1 step)
remove_copy_second_p.adb:45:47: info: index check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.adb:45:66: info: index check proved (CVC4: 4 VC in max 0.2 seconds and 1 step)
remove_copy_second_p.adb:47:17: info: range check proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.ads:18:07: info: disjoint contract cases proved (CVC4: 1 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.ads:18:07: info: complete contract cases proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_second_p.ads:18:39: info: contract case proved (CVC4: 2 VC in max 0.1 seconds and 1 step; Trivial: 1 VC in max 0.0 seconds and 0 steps)
remove_copy_second_p.ads:19:21: info: contract case proved (CVC4: 6 VC in max 2.1 seconds and 262 steps; Trivial: 2 VC in max 0.0 seconds and 0 steps)
remove_copy_second_p.ads:21:34: info: precondition proved (CVC4: 1 VC in max 0.0 seconds and 1 step)
remove_copy_second_p.ads:22:53: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.ads:23:56: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.ads:23:68: info: index check proved (CVC4: 2 VC in max 0.1 seconds and 1 step)
remove_copy_second_p.ads:26:39: info: range check proved (CVC4: 4 VC in max 0.1 seconds and 1 step)
