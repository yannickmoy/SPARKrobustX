{"project": {"path": "numeric/numeric_algorithms.gpr", "files": ["accumulate_naive_p.adb", "accumulate_p.adb", "adjacent_difference_p.adb", "inner_product_p.adb", "iota_p.adb", "numeric_inv.adb", "partial_sum_p.adb"]}, "version": "2020", "prover": ["z3", "altergo"]}
iota_p.adb:12:25: info: overflow check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
iota_p.adb:13:33: info: loop invariant initialization proved (Z3: 1 VC in max 0.0 seconds and 1 step)
iota_p.adb:13:33: info: loop invariant preservation proved (Z3: 1 VC in max 0.0 seconds and 1 step)
iota_p.adb:14:33: info: precondition proved (Z3: 2 VC in max 0.1 seconds and 1 step)
iota_p.adb:14:33: info: loop invariant initialization proved (Z3: 1 VC in max 0.0 seconds and 1 step)
iota_p.adb:14:33: info: loop invariant preservation proved (Z3: 1 VC in max 0.1 seconds and 1 step)
iota_p.adb:14:42: info: range check proved (Z3: 8 VC in max 0.0 seconds and 1 step)
iota_p.ads:10:22: info: range check proved (Z3: 1 VC in max 0.0 seconds and 1 step)
iota_p.ads:11:15: info: precondition proved (Z3: 1 VC in max 0.1 seconds and 1 step)
iota_p.ads:11:15: info: postcondition proved (Z3: 1 VC in max 0.1 seconds and 1 step)
accumulate_naive_p.adb:14:25: info: assertion proved (Z3: 2 VC in max 0.0 seconds and 1 step)
accumulate_naive_p.adb:14:34: info: range check proved (Z3: 8 VC in max 0.0 seconds and 1 step)
accumulate_naive_p.adb:15:27: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
accumulate_naive_p.adb:16:33: info: loop invariant initialization proved (Z3: 1 VC in max 0.1 seconds and 1 step)
accumulate_naive_p.adb:16:33: info: loop invariant preservation proved (Z3: 1 VC in max 0.1 seconds and 1 step)
accumulate_naive_p.adb:16:51: info: range check proved (Z3: 8 VC in max 0.1 seconds and 1 step)
accumulate_naive_p.ads:12:49: info: range check proved (Z3: 4 VC in max 0.0 seconds and 1 step)
accumulate_naive_p.ads:13:15: info: postcondition proved (Z3: 1 VC in max 0.2 seconds and 1 step)
accumulate_p.adb:13:25: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 8 VC in max 0.1 seconds and 1 step)
accumulate_p.adb:13:25: info: assertion proved (Z3: 2 VC in max 0.1 seconds and 1 step)
accumulate_p.adb:14:27: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
accumulate_p.adb:15:33: info: loop invariant initialization proved (Z3: 1 VC in max 0.0 seconds and 1 step)
accumulate_p.adb:15:33: info: loop invariant preservation proved (Z3: 1 VC in max 0.1 seconds and 1 step)
accumulate_p.adb:15:42: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 8 VC in max 0.1 seconds and 1 step)
accumulate_p.adb:15:71: info: discriminant check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
accumulate_p.ads:12:40: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 4 VC in max 0.1 seconds and 1 step)
accumulate_p.ads:13:15: info: postcondition proved (Z3: 1 VC in max 0.1 seconds and 1 step)
accumulate_p.ads:13:35: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 4 VC in max 0.0 seconds and 1 step)
accumulate_p.ads:13:69: info: discriminant check proved (Z3: 1 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:11:14: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:11:29: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:16:27: info: overflow check proved (Z3: 1 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:18:28: info: assertion proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:18:50: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:18:59: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:20:18: info: overflow check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:20:28: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:20:28: info: index check proved (Z3: 4 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:20:45: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:20:48: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:20:55: info: overflow check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:20:55: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:23:16: info: loop invariant initialization proved (Z3: 1 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:23:16: info: loop invariant preservation proved (Z3: 1 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:24:33: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:24:49: info: index check proved (Z3: 4 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:24:60: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:25:36: info: loop invariant initialization proved (Z3: 1 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:25:36: info: loop invariant preservation proved (Z3: 1 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.adb:25:40: info: index check proved (Z3: 4 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.adb:25:54: info: index check proved (Z3: 4 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.ads:14:35: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.ads:14:44: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.ads:17:07: info: postcondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 2 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.ads:18:14: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.ads:18:28: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
adjacent_difference_p.ads:21:28: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.ads:21:44: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
adjacent_difference_p.ads:21:54: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
partial_sum_p.adb:11:14: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:11:29: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
partial_sum_p.adb:13:25: info: range check proved (Z3: 1 VC in max 0.0 seconds and 1 step)
partial_sum_p.adb:15:28: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 8 VC in max 0.0 seconds and 1 step)
partial_sum_p.adb:15:28: info: assertion proved (Z3: 2 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:16:28: info: assertion proved (Z3: 2 VC in max 0.2 seconds and 1 step)
partial_sum_p.adb:16:39: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:16:52: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 8 VC in max 0.0 seconds and 1 step)
partial_sum_p.adb:16:92: info: discriminant check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:17:24: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:17:24: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:17:43: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:17:43: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:17:54: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:17:67: info: overflow check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
partial_sum_p.adb:17:67: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:20:16: info: loop invariant initialization proved (Z3: 1 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:20:16: info: loop invariant preservation proved (altergo: 1 VC in max 1.0 seconds and 5308 steps)
partial_sum_p.adb:21:29: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:21:36: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 8 VC in max 0.1 seconds and 1 step)
partial_sum_p.adb:21:72: info: discriminant check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
partial_sum_p.ads:13:41: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 4 VC in max 0.0 seconds and 1 step)
partial_sum_p.ads:15:07: info: postcondition proved (Z3: 1 VC in max 0.1 seconds and 1 step)
partial_sum_p.ads:15:27: info: range check proved (Z3: 1 VC in max 0.1 seconds and 1 step)
partial_sum_p.ads:16:21: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
partial_sum_p.ads:16:28: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 4 VC in max 0.1 seconds and 1 step)
partial_sum_p.ads:16:64: info: discriminant check proved (Z3: 1 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:12:22: info: range check proved (Z3: 1 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:14:25: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 10 VC in max 0.0 seconds and 1 step)
inner_product_p.adb:14:25: info: assertion proved (Z3: 2 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:15:27: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:15:40: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:15:40: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:15:45: info: overflow check proved (altergo: 2 VC in max 1.8 seconds and 3619 steps)
inner_product_p.adb:15:58: info: overflow check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
inner_product_p.adb:15:58: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:18:13: info: loop invariant initialization proved (Z3: 1 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:18:13: info: loop invariant preservation proved (Z3: 1 VC in max 0.1 seconds and 1 step)
inner_product_p.adb:18:22: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 10 VC in max 0.0 seconds and 1 step)
inner_product_p.adb:18:55: info: discriminant check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
inner_product_p.ads:15:27: info: range check proved (Z3: 1 VC in max 0.1 seconds and 1 step)
inner_product_p.ads:15:42: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 5 VC in max 0.1 seconds and 1 step)
inner_product_p.ads:16:15: info: postcondition proved (Z3: 1 VC in max 0.1 seconds and 1 step)
inner_product_p.ads:17:07: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 5 VC in max 0.0 seconds and 1 step)
inner_product_p.ads:17:33: info: range check proved (Z3: 1 VC in max 0.0 seconds and 1 step)
inner_product_p.ads:17:51: info: discriminant check proved (Z3: 1 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:13:07: info: precondition proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:14:22: info: assertion proved (altergo: 1 VC in max 7.7 seconds and 17385 steps)
numeric_inv.adb:14:26: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:14:40: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:19:15: medium: assertion might fail, cannot prove B (J) = B (J - 1) + A (A'First + (J - B'first))
numeric_inv.adb:19:18: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:19:28: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:19:46: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:21:13: info: assertion proved (Z3: 1 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:22:18: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:23:26: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:23:56: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:26:07: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:30:07: info: initialization of "Tmp" proved
numeric_inv.adb:36:18: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:37:07: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:39:10: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 4 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:39:10: info: assertion proved (Z3: 2 VC in max 5.4 seconds and 15727 steps)
numeric_inv.adb:40:19: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 4 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:40:51: info: discriminant check proved (Z3: 1 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:43:27: info: overflow check proved (Z3: 1 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:45:28: info: assertion proved (Z3: 2 VC in max 3.4 seconds and 4796 steps)
numeric_inv.adb:45:43: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:45:59: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:47:24: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:47:31: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:47:41: info: overflow check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:47:41: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:49:36: info: loop invariant initialization proved (Z3: 1 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:49:36: info: loop invariant preservation proved (Z3: 1 VC in max 0.0 seconds and 1 step)
numeric_inv.adb:49:45: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:51:16: info: loop invariant initialization proved (Z3: 2 VC in max 6.0 seconds and 14725 steps)
numeric_inv.adb:52:18: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 8 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:52:18: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove Acc_Def (B, B'First, K - A'First + B'First, 0).OK
numeric_inv.adb:54:20: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 8 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:54:66: info: discriminant check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:55:23: info: index check proved (Z3: 4 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:57:16: info: loop invariant preservation proved (Z3: 1 VC in max 0.3 seconds and 1 step)
numeric_inv.adb:57:16: info: loop invariant initialization proved (Z3: 1 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:58:18: info: precondition proved (Trivial: 2 VC in max 0.0 seconds and 0 steps; Z3: 8 VC in max 0.1 seconds and 1 step)
numeric_inv.adb:61:07: info: precondition proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.ads:13:41: info: precondition proved (Trivial: 1 VC in max 0.0 seconds and 0 steps; Z3: 4 VC in max 0.1 seconds and 1 step)
numeric_inv.ads:14:15: info: postcondition proved (Z3: 1 VC in max 0.1 seconds and 1 step)
numeric_inv.ads:20:32: info: index check proved (Z3: 2 VC in max 0.1 seconds and 1 step)
numeric_inv.ads:20:41: info: index check proved (Z3: 2 VC in max 0.0 seconds and 1 step)
numeric_inv.ads:21:15: medium: postcondition might fail, cannot prove A = A'old
